<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Daksh AI - India's #1 AI Calling Platform</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background-color: #0f172a;
      color: white;
    }
    .gradient-bg {
      background: linear-gradient(135deg, #1e3a8a 0%, #0e7490 50%, #164e63 100%);
    }
    .glow-btn {
      box-shadow: 0 0 15px rgba(59, 130, 246, 0.5);
    }
    .chat-bubble {
      background: linear-gradient(135deg, #3b82f6 0%, #6366f1 100%);
      box-shadow: 0 10px 25px -5px rgba(59, 130, 246, 0.5);
    }
    .card-hover {
      transition: all 0.3s ease;
    }
    .card-hover:hover {
      transform: translateY(-5px);
      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.2);
    }
    .fade-in {
      animation: fadeIn 0.5s ease-in;
    }
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
  </style>
</head>
<body class="min-h-screen">
  <!-- Dark Theme Toggle -->
  <div class="fixed top-4 right-4 z-50">
    <button id="themeToggle" class="p-2 rounded-full bg-gray-800 text-white">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
      </svg>
    </button>
  </div>

  <!-- Hero Section -->
  <section id="hero" class="gradient-bg min-h-screen flex flex-col justify-center items-center text-center px-4 py-20 relative overflow-hidden">
    <div class="absolute inset-0 opacity-20">
      <div class="absolute top-0 left-0 w-full h-1/2 bg-gradient-to-b from-blue-900 to-transparent"></div>
      <div class="relative z-10">
        <div class="circle absolute top-20 left-20 w-64 h-64 rounded-full bg-blue-500 opacity-10 blur-3xl"></div>
        <div class="circle absolute bottom-20 right-20 w-80 h-80 rounded-full bg-indigo-500 opacity-10 blur-3xl"></div>
      </div>
    </div>
    
    <div class="relative z-20 max-w-4xl">
      <h1 class="text-5xl md:text-6xl font-bold mb-6 fade-in">India's #1 AI Calling Platform</h1>
      <p class="text-xl md:text-2xl mb-8 text-blue-100 fade-in">Run your business with humanlike voice agents like Nova.</p>
      <div class="flex flex-col sm:flex-row justify-center gap-4 fade-in">
        <button id="tryNovaBtn" class="px-6 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg font-medium glow-btn transition-all">
          Try Nova
        </button>
        <button id="adminLoginBtn" class="px-6 py-3 bg-gray-800 hover:bg-gray-700 rounded-lg font-medium transition-all">
          Admin Login
        </button>
        <button id="createAccountBtn" class="px-6 py-3 bg-green-600 hover:bg-green-700 rounded-lg font-medium transition-all">
          Create Account
        </button>
      </div>
    </div>

    <div class="absolute bottom-10 animate-bounce">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
      </svg>
    </div>
  </section>

  <!-- Features Section -->
  <section id="features" class="py-20 px-4">
    <div class="max-w-6xl mx-auto">
      <h2 class="text-3xl md:text-4xl font-bold text-center mb-16">Power Your Business with AI</h2>
      
      <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
        <!-- Feature 1 -->
        <div class="bg-gray-800 p-6 rounded-xl card-hover">
          <div class="w-14 h-14 bg-blue-600 rounded-lg flex items-center justify-center mb-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
          </div>
          <h3 class="text-xl font-semibold mb-2">Smart Calling</h3>
          <p class="text-gray-300">Human-like voice agents handle your customer calls 24/7 with natural conversations.</p>
        </div>
        
        <!-- Feature 2 -->
        <div class="bg-gray-800 p-6 rounded-xl card-hover">
          <div class="w-14 h-14 bg-purple-600 rounded-lg flex items-center justify-center mb-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <h3 class="text-xl font-semibold mb-2">Real-time Analytics</h3>
          <p class="text-gray-300">Track call metrics, conversions, and customer interactions in real-time dashboards.</p>
        </div>
        
        <!-- Feature 3 -->
        <div class="bg-gray-800 p-6 rounded-xl card-hover">
          <div class="w-14 h-14 bg-indigo-600 rounded-lg flex items-center justify-center mb-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
            </svg>
          </div>
          <h3 class="text-xl font-semibold mb-2">Secure & Compliant</h3>
          <p class="text-gray-300">Enterprise-grade security with encryption and comply with all telecom regulations.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Nova AI Chatbot (Floating) -->
  <div id="novaChatContainer" class="fixed bottom-6 right-6 z-40 hidden">
    <div id="novaChatBtn" class="w-16 h-16 rounded-full flex items-center justify-center chat-bubble cursor-pointer shadow-xl transition-all hover:scale-110">
      <div class="relative">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
        </svg>
        <div id="novaNotification" class="absolute -top-1 -right-1 w-4 h-4 bg-red-500 rounded-full hidden"></div>
      </div>
    </div>

    <div id="novaChatWindow" class="hidden absolute bottom-20 right-0 w-80 h-96 bg-gray-800 rounded-t-xl rounded-bl-xl shadow-2xl flex flex-col">
      <div class="flex items-center justify-between p-4 bg-gray-900 rounded-t-xl">
        <div class="flex items-center">
          <div class="w-10 h-10 rounded-full bg-indigo-600 flex items-center justify-center mr-2">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
            </svg>
          </div>
          <h3 class="font-bold text-white">Nova AI Assistant</h3>
          <span class="ml-2 px-2 py-0.5 bg-green-500 text-xs rounded-full">Online</span>
        </div>
        <button id="closeChatBtn" class="text-gray-400 hover:text-white">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </button>
      </div>
      
      <div id="novaChatMessages" class="flex-1 p-4 overflow-y-auto text-sm">
        <div class="nova-message received mb-4">
          <div class="bg-gray-700 text-white rounded-lg p-3 inline-block max-w-xs">
            Hello! I'm Nova, your AI assistant. How can I help you today?
          </div>
          <p class="text-xs text-gray-400 mt-1">Nova â€¢ Just now</p>
        </div>
      </div>
      
      <div class="p-3 border-t border-gray-700">
        <div id="novaCommandHelp" class="bg-gray-900 text-xs p-3 rounded-lg mb-2 hidden">
          <p class="font-bold text-blue-400 mb-1">Available commands:</p>
          <p><span class="text-purple-400">/create</span> - Create new account</p>
          <p><span class="text-purple-400">/upload</span> - Upload contact list</p>
          <p><span class="text-purple-400">/status</span> - Check call queue</p>
          <p><span class="text-purple-400">/help</span> - Show help</p>
          <p><span class="text-purple-400">/whatsapp</span> - Get demo via WhatsApp</p>
        </div>
        
        <div class="relative">
          <input id="novaChatInput" type="text" class="w-full bg-gray-700 text-white px-4 py-2 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Type a message or command...">
          <button id="novaSendBtn" class="absolute right-3 top-2 text-gray-400 hover:text-blue-400">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 1.414L10.586 9H7a1 1 0 100 2h3.586l-1.293 1.293a1 1 0 101.414 1.414l3-3a1 1 0 000-1.414z" clip-rule="evenodd" />
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Login Modal -->
  <div id="loginModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-70 hidden">
    <div class="bg-gray-800 rounded-xl p-6 w-full max-w-md">
      <div class="flex justify-between items-center mb-6">
        <h3 class="text-2xl font-bold">Login to Dashboard</h3>
        <button id="closeLoginModal" class="text-gray-400 hover:text-white">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <form id="loginForm">
        <div class="mb-4">
          <label class="block text-gray-300 text-sm mb-2" for="loginEmail">Email</label>
          <input id="loginEmail" type="email" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="you@example.com" required>
        </div>
        
        <div class="mb-6">
          <label class="block text-gray-300 text-sm mb-2" for="loginPassword">Password</label>
          <input id="loginPassword" type="password" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="********" required>
        </div>
        
        <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors">
          Login
        </button>
        
        <div class="text-center mt-4">
          <a href="#" class="text-blue-400 hover:text-blue-300 text-sm" id="switchToRegister">Don't have an account? Register</a>
        </div>
      </form>
    </div>
  </div>

  <!-- Register Modal -->
  <div id="registerModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-70 hidden">
    <div class="bg-gray-800 rounded-xl p-6 w-full max-w-md">
      <div class="flex justify-between items-center mb-6">
        <h3 class="text-2xl font-bold">Create Account</h3>
        <button id="closeRegisterModal" class="text-gray-400 hover:text-white">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <form id="registerForm">
        <div class="mb-4">
          <label class="block text-gray-300 text-sm mb-2" for="registerName">Full Name</label>
          <input id="registerName" type="text" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Your Name" required>
        </div>
        
        <div class="mb-4">
          <label class="block text-gray-300 text-sm mb-2" for="registerEmail">Email</label>
          <input id="registerEmail" type="email" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="you@example.com" required>
        </div>
        
        <div class="mb-4">
          <label class="block text-gray-300 text-sm mb-2" for="registerPhone">WhatsApp Number</label>
          <input id="registerPhone" type="tel" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="+91 XXXXXXXXXX" required>
        </div>
        
        <div class="mb-4">
          <label class="block text-gray-300 text-sm mb-2" for="registerBusiness">Business Type</label>
          <select id="registerBusiness" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" required>
            <option value="" disabled selected>Select your business</option>
            <option value="ecommerce">E-commerce</option>
            <option value="realestate">Real Estate</option>
            <option value="education">Education</option>
            <option value="healthcare">Healthcare</option>
            <option value="finance">Finance</option>
            <option value="other">Other</option>
          </select>
        </div>
        
        <div class="mb-6">
          <label class="block text-gray-300 text-sm mb-2" for="registerPassword">Password</label>
          <input id="registerPassword" type="password" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="********" required>
        </div>
        
        <button type="submit" class="w-full bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-lg transition-colors">
          Create Account
        </button>
        
        <div class="text-center mt-4">
          <a href="#" class="text-blue-400 hover:text-blue-300 text-sm" id="switchToLogin">Already have an account? Login</a>
        </div>
      </form>
    </div>
  </div>

  <!-- Admin Login Modal -->
  <div id="adminLoginModal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-70 hidden">
    <div class="bg-gray-800 rounded-xl p-6 w-full max-w-md">
      <div class="flex justify-between items-center mb-6">
        <h3 class="text-2xl font-bold">Admin Login</h3>
        <button id="closeAdminLoginModal" class="text-gray-400 hover:text-white">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <form id="adminLoginForm">
        <div class="mb-4">
          <label class="block text-gray-300 text-sm mb-2" for="adminEmail">Admin Email</label>
          <input id="adminEmail" type="email" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="admin@example.com" required>
        </div>
        
        <div class="mb-6">
          <label class="block text-gray-300 text-sm mb-2" for="adminPassword">Password</label>
          <input id="adminPassword" type="password" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="********" required>
        </div>
        
        <button type="submit" class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-2 px-4 rounded-lg transition-colors">
          Login as Admin
        </button>
      </form>
    </div>
  </div>

  <!-- User Dashboard (Hidden by default) -->
  <div id="userDashboard" class="min-h-screen bg-gray-900 hidden">
    <nav class="bg-gray-800 border-b border-gray-700">
      <div class="max-w-6xl mx-auto px-4">
        <div class="flex justify-between h-16 items-center">
          <div class="flex items-center">
            <div class="flex-shrink-0 flex items-center">
              <div class="w-10 h-10 rounded-full bg-indigo-600 flex items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
              </div>
              <h1 class="ml-3 text-lg font-bold">Daksh AI</h1>
            </div>
          </div>
          <div class="flex items-center space-x-4">
            <div class="relative">
              <button id="userMenuBtn" class="flex items-center space-x-2">
                <div class="w-8 h-8 rounded-full bg-gray-600 flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                  </svg>
                </div>
                <span id="currentUsername" class="text-sm">User Name</span>
              </button>
              <div id="userDropdown" class="hidden absolute right-0 mt-2 w-48 bg-gray-800 rounded-md shadow-lg z-50 border border-gray-700">
                <div class="py-1">
                  <a href="#" class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700">Profile</a>
                  <a href="#" id="logoutBtn" class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700">Sign out</a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </nav>

    <div class="max-w-6xl mx-auto px-4 py-6">
      <div class="mb-6">
        <h2 class="text-2xl font-bold">Dashboard Overview</h2>
        <div class="flex items-center text-sm text-gray-400">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" />
          </svg>
          <span id="dashboardDate"></span>
          <span class="mx-2">â€¢</span>
          <span class="text-green-400">Online</span>
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
        <!-- Stats Card 1 -->
        <div class="bg-gray-800 rounded-xl p-6 card-hover">
          <div class="flex items-center justify-between mb-4">
            <div>
              <h3 class="text-lg font-semibold">Contacts Uploaded</h3>
              <p class="text-gray-400 text-sm">Total contacts in database</p>
            </div>
            <div class="w-12 h-12 rounded-full bg-blue-500 bg-opacity-10 flex items-center justify-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
              </svg>
            </div>
          </div>
          <p id="contactsCount" class="text-3xl font-bold">0</p>
        </div>
        
        <!-- Stats Card 2 -->
        <div class="bg-gray-800 rounded-xl p-6 card-hover">
          <div class="flex items-center justify-between mb-4">
            <div>
              <h3 class="text-lg font-semibold">Calls Made</h3>
              <p class="text-gray-400 text-sm">Automated calls this month</p>
            </div>
            <div class="w-12 h-12 rounded-full bg-green-500 bg-opacity-10 flex items-center justify-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
              </svg>
            </div>
          </div>
          <p id="callsCount" class="text-3xl font-bold">0</p>
        </div>
        
        <!-- Stats Card 3 -->
        <div class="bg-gray-800 rounded-xl p-6 card-hover">
          <div class="flex items-center justify-between mb-4">
            <div>
              <h3 class="text-lg font-semibold">Account Balance</h3>
              <p class="text-gray-400 text-sm">Available credits</p>
            </div>
            <div class="w-12 h-12 rounded-full bg-purple-500 bg-opacity-10 flex items-center justify-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-purple-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
          </div>
          <p id="accountBalance" class="text-3xl font-bold">â‚¹0</p>
        </div>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
        <!-- Upload Contacts -->
        <div class="lg:col-span-1">
          <div class="bg-gray-800 rounded-xl p-6 h-full">
            <h3 class="text-lg font-semibold mb-4">Upload Contacts</h3>
            <p class="text-gray-400 text-sm mb-4">Upload a CSV file with phone numbers or paste numbers manually.</p>
            
            <div class="border-2 border-dashed border-gray-700 rounded-lg p-6 text-center mb-4">
              <label for="contactsFile" class="cursor-pointer">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 mx-auto text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                </svg>
                <p class="mt-2 text-sm text-gray-400">Drag and drop your file here</p>
                <p class="text-xs text-gray-500">or click to browse (CSV or Excel)</p>
              </label>
              <input type="file" id="contactsFile" class="hidden" accept=".csv,.xlsx,.xls">
            </div>
            
            <button id="uploadContactsBtn" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg font-medium mt-2">
              Upload File
            </button>
            
            <div class="relative my-6">
              <div class="absolute inset-0 flex items-center" aria-hidden="true">
                <div class="w-full border-t border-gray-700"></div>
              </div>
              <div class="relative flex justify-center">
                <span class="px-3 bg-gray-800 text-sm text-gray-400">OR</span>
              </div>
            </div>
            
            <div>
              <label for="manualContacts" class="block text-sm font-medium text-gray-300 mb-2">Paste numbers manually</label>
              <textarea id="manualContacts" rows="4" class="w-full bg-gray-700 rounded-lg px-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Enter phone numbers, one per line"></textarea>
              <button id="addManualContactsBtn" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg font-medium mt-2">
                Add Contacts
              </button>
            </div>
          </div>
        </div>
        
        <!-- Call Queue -->
        <div class="lg:col-span-2">
          <div class="bg-gray-800 rounded-xl p-6 h-full">
            <div class="flex justify-between items-center mb-6">
              <h3 class="text-lg font-semibold">Call Queue</h3>
              <div class="flex space-x-2">
                <button id="startCallsBtn" class="bg-green-600 hover:bg-green-700 text-white text-sm py-1 px-3 rounded-lg">
                  Start Calls
                </button>
                <button id="stopCallsBtn" class="bg-red-600 hover:bg-red-700 text-white text-sm py-1 px-3 rounded-lg">
                  Stop Calls
                </button>
              </div>
            </div>
            
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-700">
                <thead>
                  <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Phone</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Duration</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Response</th>
                  </tr>
                </thead>
                <tbody id="callQueueBody" class="divide-y divide-gray-700">
                  <!-- Rows will be added dynamically -->
                  <tr>
                    <td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">No calls in queue</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>

      <!-- Responses Section -->
      <div class="bg-gray-800 rounded-xl p-6 mb-8">
        <h3 class="text-lg font-semibold mb-6">Call Responses</h3>
        
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-700">
            <thead>
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Phone</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Call Time</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Duration</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Response</th>
              </tr>
            </thead>
            <tbody id="callResponsesBody" class="divide-y divide-gray-700">
              <!-- Rows will be added dynamically -->
              <tr>
                <td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">No call responses yet</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>

      <!-- Recharge Section -->
      <div class="bg-gray-800 rounded-xl p-6">
        <h3 class="text-lg font-semibold mb-4">Recharge Account</h3>
        <p class="text-gray-400 text-sm mb-6">Add balance to your account to make more calls.</p>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
          <div class="recharge-option bg-gray-700 hover:bg-gray-600 rounded-lg p-4 cursor-pointer border border-gray-600 hover:border-blue-500 transition-colors">
            <div class="flex justify-between items-start">
              <div>
                <h4 class="font-medium">â‚¹100</h4>
                <p class="text-sm text-gray-400">50 calls</p>
              </div>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-500" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
              </svg>
            </div>
          </div>
          
          <div class="recharge-option bg-gray-700 hover:bg-gray-600 rounded-lg p-4 cursor-pointer border border-gray-600 hover:border-blue-500 transition-colors">
            <div class="flex justify-between items-start">
              <div>
                <h4 class="font-medium">â‚¹250</h4>
                <p class="text-sm text-gray-400">150 calls + 20 bonus</p>
              </div>
            </div>
          </div>
          
          <div class="recharge-option bg-gray-700 hover:bg-gray-600 rounded-lg p-4 cursor-pointer border border-gray-600 hover:border-blue-500 transition-colors">
            <div class="flex justify-between items-start">
              <div>
                <h4 class="font-medium">â‚¹500</h4>
                <p class="text-sm text-gray-400">350 calls + 100 bonus</p>
              </div>
            </div>
          </div>
          
          <div class="recharge-option bg-gray-700 hover:bg-gray-600 rounded-lg p-4 cursor-pointer border border-gray-600 hover:border-blue-500 transition-colors">
            <div class="flex justify-between items-start">
              <div>
                <h4 class="font-medium">â‚¹1000</h4>
                <p class="text-sm text-gray-400">800 calls + 400 bonus</p>
              </div>
            </div>
          </div>
        </div>
        
        <div id="paymentSection" class="hidden">
          <div class="border border-gray-700 rounded-lg p-6 mb-4">
            <h4 class="font-medium mb-4">Payment Method</h4>
            
            <div class="grid grid-cols-2 gap-4 mb-6">
              <div>
                <input type="radio" id="upiPayment" name="paymentMethod" class="hidden peer" checked>
                <label for="upiPayment" class="flex items-center justify-center p-4 border border-gray-600 rounded-lg cursor-pointer hover:border-blue-500 peer-checked:border-blue-500 peer-checked:bg-blue-900/20 transition-colors">
                  <img src="https://placehold.co/80x30" alt="UPI payment method logos" class="h-6 mr-2">
                  <span>UPI Payment</span>
                </label>
              </div>
              
              <div>
                <input type="radio" id="cardPayment" name="paymentMethod" class="hidden peer">
                <label for="cardPayment" class="flex items-center justify-center p-4 border border-gray-600 rounded-lg cursor-pointer hover:border-blue-500 peer-checked:border-blue-500 peer-checked:bg-blue-900/20 transition-colors">
                  <img src="https://placehold.co/80x30" alt="Credit/Debit card payment method logos" class="h-6 mr-2">
                  <span>Card Payment</span>
                </label>
              </div>
            </div>
            
            <div id="upiSection">
              <div class="mb-4">
                <label class="block text-gray-300 text-sm mb-2">Upload UPI Payment Screenshot</label>
                <div class="border-2 border-dashed border-gray-700 rounded-lg p-6 text-center">
                  <label for="paymentScreenshot" class="cursor-pointer">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 mx-auto text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                    <p class="mt-2 text-sm text-gray-400">Click to upload transaction screenshot</p>
                    <p class="text-xs text-gray-500">PNG or JPG (max 5MB)</p>
                  </label>
                  <input type="file" id="paymentScreenshot" class="hidden" accept="image/*">
                </div>
              </div>
              
              <div>
                <h5 class="font-medium mb-2">Bank Details</h5>
                <div class="bg-gray-700 rounded-lg p-4 mb-4">
                  <div class="grid grid-cols-2 gap-4 text-sm">
                    <div>
                      <p class="text-gray-400">Account Name</p>
                      <p class="text-white">Daksh AI Solutions</p>
                    </div>
                    <div>
                      <p class="text-gray-400">Account Number</p>
                      <p class="text-white">1234567890</p>
                    </div>
                    <div>
                      <p class="text-gray-400">Bank Name</p>
                      <p class="text-white">HDFC Bank</p>
                    </div>
                    <div>
                      <p class="text-gray-400">IFSC Code</p>
                      <p class="text-white">HDFC0000123</p>
                    </div>
                    <div class="col-span-2">
                      <p class="text-gray-400">UPI ID</p>
                      <p class="text-white">dakshai@hdfc</p>
                    </div>
                  </div>
                </div>
              </div>
              
              <button id="submitPaymentBtn" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg font-medium">
                Submit Payment
              </button>
            </div>
            
            <div id="cardSection" class="hidden">
              <div class="space-y-4">
                <div>
                  <label class="block text-gray-300 text-sm mb-2" for="cardNumber">Card Number</label>
                  <input type="text" id="cardNumber" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="1234 5678 9012 3456">
                </div>
                
                <div class="grid grid-cols-2 gap-4">
                  <div>
                    <label class="block text-gray-300 text-sm mb-2" for="expiryDate">Expiry Date</label>
                    <input type="text" id="expiryDate" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="MM/YY">
                  </div>
                  <div>
                    <label class="block text-gray-300 text-sm mb-2" for="cvv">CVV</label>
                    <input type="text" id="cvv" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="123">
                  </div>
                </div>
                
                <div>
                  <label class="block text-gray-300 text-sm mb-2" for="cardName">Name on Card</label>
                  <input type="text" id="cardName" class="w-full bg-gray-700 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Your Name">
                </div>
              </div>
              
              <button id="payNowBtn" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg font-medium mt-6">
                Pay Now
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Admin Dashboard (Hidden by default) -->
  <div id="adminDashboard" class="min-h-screen bg-gray-900 hidden">
    <nav class="bg-gray-800 border-b border-gray-700">
      <div class="max-w-6xl mx-auto px-4">
        <div class="flex justify-between h-16 items-center">
          <div class="flex items-center">
            <div class="flex-shrink-0 flex items-center">
              <div class="w-10 h-10 rounded-full bg-indigo-600 flex items-center justify-center mr-2">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <h1 class="text-lg font-bold">Daksh AI Admin</h1>
            </div>
          </div>
          <div class="flex items-center space-x-4">
            <div class="relative">
              <button id="adminMenuBtn" class="flex items-center space-x-2">
                <div class="w-8 h-8 rounded-full bg-gray-600 flex items-center justify-center">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                  </svg>
                </div>
                <span class="text-sm">Admin User</span>
              </button>
              <div id="adminDropdown" class="hidden absolute right-0 mt-2 w-48 bg-gray-800 rounded-md shadow-lg z-50 border border-gray-700">
                <div class="py-1">
                  <a href="#" class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700">Admin Settings</a>
                  <a href="#" id="adminLogoutBtn" class="block px-4 py-2 text-sm text-gray-300 hover:bg-gray-700">Sign out</a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </nav>

    <div class="max-w-6xl mx-auto px-4 py-6">
      <div class="mb-6">
        <h2 class="text-2xl font-bold">Admin Dashboard</h2>
        <div class="flex items-center text-sm text-gray-400">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7h8m0 0v8m0-8l-8 8-4-4-6 6" />
          </svg>
          <span id="adminDashboardDate"></span>
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
        <!-- Admin Stats Card 1 -->
        <div class="bg-gray-800 rounded-xl p-6 card-hover">
          <div class="flex items-center justify-between mb-4">
            <div>
              <h3 class="text-lg font-semibold">Total Users</h3>
              <p class="text-gray-400 text-sm">Registered accounts</p>
            </div>
            <div class="w-12 h-12 rounded-full bg-green-500 bg-opacity-10 flex items-center justify-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-green-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z" />
              </svg>
            </div>
          </div>
          <p id="totalUsers" class="text-3xl font-bold">0</p>
        </div>
        
        <!-- Admin Stats Card 2 -->
        <div class="bg-gray-800 rounded-xl p-6 card-hover">
          <div class="flex items-center justify-between mb-4">
            <div>
              <h3 class="text-lg font-semibold">Active Calls</h3>
              <p class="text-gray-400 text-sm">Currently running</p>
            </div>
            <div class="w-12 h-12 rounded-full bg-blue-500 bg-opacity-10 flex items-center justify-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
              </svg>
            </div>
          </div>
          <p id="activeCalls" class="text-3xl font-bold">0</p>
        </div>
        
        <!-- Admin Stats Card 3 -->
        <div class="bg-gray-800 rounded-xl p-6 card-hover">
          <div class="flex items-center justify-between mb-4">
            <div>
              <h3 class="text-lg font-semibold">Pending Payments</h3>
              <p class="text-gray-400 text-sm">Awaiting approval</p>
            </div>
            <div class="w-12 h-12 rounded-full bg-yellow-500 bg-opacity-10 flex items-center justify-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-yellow-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
          </div>
          <p id="pendingPayments" class="text-3xl font-bold">0</p>
        </div>
        
        <!-- Admin Stats Card 4 -->
        <div class="bg-gray-800 rounded-xl p-6 card-hover">
          <div class="flex items-center justify-between mb-4">
            <div>
              <h3 class="text-lg font-semibold">Total Revenue</h3>
              <p class="text-gray-400 text-sm">All-time earnings</p>
            </div>
            <div class="w-12 h-12 rounded-full bg-purple-500 bg-opacity-10 flex items-center justify-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-purple-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
              </svg>
            </div>
          </div>
          <p id="totalRevenue" class="text-3xl font-bold">â‚¹0</p>
        </div>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
        <!-- Users Management -->
        <div class="lg:col-span-2">
          <div class="bg-gray-800 rounded-xl p-6">
            <div class="flex justify-between items-center mb-6">
              <h3 class="text-lg font-semibold">User Management</h3>
              <div class="relative">
                <input type="text" id="searchUsers" class="bg-gray-700 rounded-lg px-4 py-1.5 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Search users...">
              </div>
            </div>
            
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-700">
                <thead>
                  <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">User</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Status</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Balance</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Actions</th>
                  </tr>
                </thead>
                <tbody id="usersTableBody" class="divide-y divide-gray-700">
                  <!-- Rows will be added dynamically -->
                  <tr>
                    <td colspan="4" class="px-6 py-4 text-center text-sm text-gray-500">No users found</td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>
        
        <!-- Quick Actions -->
        <div class="lg:col-span-1">
          <div class="bg-gray-800 rounded-xl p-6 h-full">
            <h3 class="text-lg font-semibold mb-6">Quick Actions</h3>
            
            <div class="space-y-4">
              <button id="addUserBtn" class="w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg font-medium flex items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                </svg>
                Add New User
              </button>
              
              <button id="exportDataBtn" class="w-full bg-green-600 hover:bg-green-700 text-white py-2 px-4 rounded-lg font-medium flex items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                </svg>
                Export Data
              </button>
              
              <button id="approvePaymentsBtn" class="w-full bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg font-medium flex items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
                Approve Payments
              </button>
              
              <button id="systemSettingsBtn" class="w-full bg-yellow-600 hover:bg-yellow-700 text-white py-2 px-4 rounded-lg font-medium flex items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                </svg>
                System Settings
              </button>
            </div>
          </div>
        </div>
      </div>

      <!-- Pending Payments -->
      <div class="bg-gray-800 rounded-xl p-6 mb-8">
        <h3 class="text-lg font-semibold mb-6">Pending Payment Approvals</h3>
        
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-700">
            <thead>
              <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">User</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Amount</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Payment Method</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Screenshot</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Date</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider">Actions</th>
              </tr>
            </thead>
            <tbody id="pendingPaymentsBody" class="divide-y divide-gray-700">
              <!-- Rows will be added dynamically -->
              <tr>
                <td colspan="6" class="px-6 py-4 text-center text-sm text-gray-500">No pending payments</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>

      <!-- Call Stats -->
      <div class="bg-gray-800 rounded-xl p-6">
        <h3 class="text-lg font-semibold mb-6">System Call Statistics</h3>
        
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <div>
            <h4 class="font-medium mb-4">Recent Calls by Status</h4>
            <div class="bg-gray-700 rounded-lg p-4">
              <div class="h-64">
                <img src="https://placehold.co/600x400" alt="Bar chart showing recent calls by status - completed, failed, in-progress" class="w-full h-full object-contain">
              </div>
            </div>
          </div>
          
          <div>
            <h4 class="font-medium mb-4">Call Volume by Hour</h4>
            <div class="bg-gray-700 rounded-lg p-4">
              <div class="h-64">
                <img src="https://placehold.co/600x400" alt="Line chart showing call volume by hour of the day, with peak times highlighted" class="w-full h-full object-contain">
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Toast Notifications -->
  <div id="toastContainer" class="fixed bottom-4 right-4 space-y-2 z-50"></div>

  <!-- Scripts -->
  <script>
    // Database simulation
    const db = {
      users: [
        {
          id: 1,
          name: "Admin User",
          email: "admin@dakshai.com",
          phone: "+919876543210",
          businessType: "other",
          password: "admin123",
          role: "admin",
          balance: 100000,
          isActive: true,
          registeredAt: new Date(2023, 0, 1)
        }
      ],
      contacts: [],
      calls: [],
      payments: [],
      settings: {
        callRate: 2, // â‚¹ per call
      }
    };

    // Check if there's any data in localStorage and load it
    if (localStorage.getItem('dakshaiDB')) {
      Object.assign(db, JSON.parse(localStorage.getItem('dakshaiDB')));
    } else {
      // Save initial data
      localStorage.setItem('dakshaiDB', JSON.stringify(db));
    }

    // Current user tracking
    let currentUser = null;
    let isLoggedIn = false;

    // Simulated backend API
    const api = {
      createAccount(userData) {
        return new Promise((resolve, reject) => {
          // Check if user already exists
          const existingUser = db.users.find(u => u.email === userData.email);
          if (existingUser) {
            reject("User with this email already exists");
            return;
          }
          
          const newUser = {
            id: db.users.length + 1,
            ...userData,
            role: "user",
            balance: 0,
            isActive: true,
            registeredAt: new Date()
          };
          
          db.users.push(newUser);
          localStorage.setItem('dakshaiDB', JSON.stringify(db));
          
          resolve(newUser);
        });
      },
      
      login(email, password) {
        return new Promise((resolve, reject) => {
          const user = db.users.find(u => u.email === email && u.password === password);
          if (user) {
            if (!user.isActive) {
              reject("Account is disabled");
              return;
            }
            
            resolve(user);
          } else {
            reject("Invalid email or password");
          }
        });
      },
      
      adminLogin(email, password) {
        return new Promise((resolve, reject) => {
          const admin = db.users.find(u => u.email === email && u.password === password && u.role === "admin");
          if (admin) {
            resolve(admin);
          } else {
            reject("Invalid admin credentials");
          }
        });
      },
      
      uploadContacts(userId, contacts) {
        return new Promise((resolve) => {
          if (!Array.isArray(contacts)) {
            contacts = contacts.split('\n').filter(c => c.trim());
          }
          
          const newContacts = contacts.map((number, index) => ({
            id: db.contacts.length + index + 1,
            number: number.trim(),
            userId,
            addedAt: new Date()
          }));
          
          db.contacts.push(...newContacts);
          localStorage.setItem('dakshaiDB', JSON.stringify(db));
          
          resolve(newContacts);
        });
      },
      
      startCallBatch(userId) {
        return new Promise((resolve) => {
          const userContacts = db.contacts.filter(c => c.userId === userId && !db.calls.some(call => call.contactId === c.id));
          
          const newCalls = userContacts.map(contact => ({
            id: db.calls.length + 1,
            contactId: contact.id,
            userId,
            status: "queued",
            startedAt: new Date(),
            duration: 0,
            response: ""
          }));
          
          db.calls.push(...newCalls);
          localStorage.setItem('dakshaiDB', JSON.stringify(db));
          
          // Simulate call progress
          setTimeout(() => {
            newCalls.forEach((call, index) => {
              setTimeout(() => {
                const callIndex = db.calls.findIndex(c => c.id === call.id);
                if (callIndex !== -1) {
                  db.calls[callIndex].status = "in-progress";
                  localStorage.setItem('dakshaiDB', JSON.stringify(db));
                  updateUserDashboard();
                }
              }, index * 2000);
              
              setTimeout(() => {
                const callIndex = db.calls.findIndex(c => c.id === call.id);
                if (callIndex !== -1) {
                  db.calls[callIndex].status = Math.random() > 0.2 ? "completed" : "failed";
                  db.calls[callIndex].duration = Math.floor(Math.random() * 120) + 10;
                  db.calls[callIndex].response = db.calls[callIndex].status === "completed" 
                    ? "Appointment booked" 
                    : "Call not answered";
                  localStorage.setItem('dakshaiDB', JSON.stringify(db));
                  updateUserDashboard();
                }
              }, index * 2000 + 5000);
            });
          }, 1000);
          
          resolve(newCalls);
        });
      },
      
      stopCallBatch(userId) {
        return new Promise((resolve) => {
          const pendingCalls = db.calls.filter(c => c.userId === userId && (c.status === "queued" || c.status === "in-progress"));
          
          pendingCalls.forEach(call => {
            call.status = "cancelled";
          });
          
          localStorage.setItem('dakshaiDB', JSON.stringify(db));
          resolve(pendingCalls);
        });
      },
      
      addPayment(userId, amount, screenshot = null) {
        return new Promise((resolve) => {
          const payment = {
            id: db.payments.length + 1,
            userId,
            amount: parseInt(amount),
            method: "upi",
            screenshot,
            status: "pending",
            createdAt: new Date()
          };
          
          db.payments.push(payment);
          localStorage.setItem('dakshaiDB', JSON.stringify(db));
          resolve(payment);
        });
      },
      
      approvePayment(paymentId) {
        return new Promise((resolve) => {
          const paymentIndex = db.payments.findIndex(p => p.id === paymentId);
          
          if (paymentIndex !== -1) {
            const payment = db.payments[paymentIndex];
            const userIndex = db.users.findIndex(u => u.id === payment.userId);
            
            if (userIndex !== -1) {
              db.users[userIndex].balance += payment.amount;
              db.payments[paymentIndex].status = "approved";
              db.payments[paymentIndex].approvedAt = new Date();
              localStorage.setItem('dakshaiDB', JSON.stringify(db));
              
              resolve({
                payment: db.payments[paymentIndex],
                user: db.users[userIndex]
              });
            }
          }
        });
      },
      
      rejectPayment(paymentId) {
        return new Promise((resolve) => {
          const paymentIndex = db.payments.findIndex(p => p.id === paymentId);
          
          if (paymentIndex !== -1) {
            db.payments[paymentIndex].status = "rejected";
            db.payments[paymentIndex].rejectedAt = new Date();
            localStorage.setItem('dakshaiDB', JSON.stringify(db));
            
            resolve(db.payments[paymentIndex]);
          }
        });
      },
      
      getUserData(userId) {
        return new Promise((resolve) => {
          const user = db.users.find(u => u.id === userId);
          if (user) {
            const contacts = db.contacts.filter(c => c.userId === userId);
            const calls = db.calls.filter(c => c.userId === userId);
            resolve({
              user,
              contacts,
              calls
            });
          }
        });
      },
      
      getAdminData() {
        return new Promise((resolve) => {
          const users = db.users.filter(u => u.role === "user");
          const pendingPayments = db.payments.filter(p => p.status === "pending");
          const activeCalls = db.calls.filter(c => c.status === "in-progress");
          const totalRevenue = db.payments
            .filter(p => p.status === "approved")
            .reduce((sum, p) => sum + p.amount, 0);
          
          resolve({
            users,
            pendingPayments,
            activeCalls: activeCalls.length,
            totalRevenue
          });
        });
      }
    };

    // Toast notification function
    function showToast(message, type = "info") {
      const colors = {
        success: "bg-green-600",
        error: "bg-red-600",
        info: "bg-blue-600",
        warning: "bg-yellow-600"
      };
      
      const toast = document.createElement("div");
      toast.className = `${colors[type]} text-white px-4 py-2 rounded-lg shadow-lg flex items-center justify-between max-w-xs transition-all transform hover:scale-105`;
      toast.innerHTML = `
        <span>${message}</span>
        <button class="toast-close ml-4">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
          </svg>
        </button>
      `;
      
      const container = document.getElementById("toastContainer");
      container.appendChild(toast);
      
      // Auto remove after 5 seconds
      setTimeout(() => {
        toast.classList.add("opacity-0", "translate-y-2");
        setTimeout(() => toast.remove(), 300);
      }, 5000);
      
      // Manual close
      toast.querySelector(".toast-close").addEventListener("click", () => {
        toast.classList.add("opacity-0", "translate-y-2");
        setTimeout(() => toast.remove(), 300);
      });
      
      return toast;
    }

    // Initialize the app
    document.addEventListener("DOMContentLoaded", () => {
      // Set current date in dashboards
      const now = new Date();
      document.getElementById("dashboardDate").textContent = now.toLocaleDateString('en-US', { 
        weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' 
      });
      
      document.getElementById("adminDashboardDate").textContent = now.toLocaleDateString('en-US', { 
        weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' 
      });
      
      // Check if user is already logged in
      if (localStorage.getItem('dashaiUser')) {
        currentUser = JSON.parse(localStorage.getItem('dashaiUser'));
        isLoggedIn = true;
        
        if (currentUser.role === "admin") {
          showAdminDashboard();
        } else {
          showUserDashboard();
        }
      }
      
      // Theme toggle
      document.getElementById("themeToggle").addEventListener("click", () => {
        document.documentElement.classList.toggle("dark");
      });
      
      // Show/hide Nova chat
      document.getElementById("novaChatBtn").addEventListener("click", () => {
        document.getElementById("novaChatWindow").classList.toggle("hidden");
      });
      
      document.getElementById("closeChatBtn").addEventListener("click", () => {
        document.getElementById("novaChatWindow").classList.add("hidden");
      });
      
      document.getElementById("tryNovaBtn").addEventListener("click", () => {
        document.getElementById("novaChatContainer").classList.remove("hidden");
        document.getElementById("novaChatWindow").classList.remove("hidden");
      });
      
      // Chat commands
      document.getElementById("novaChatInput").addEventListener("keypress", (e) => {
        if (e.key === "Enter") {
          sendMessage();
        }
      });
      
      document.getElementById("novaSendBtn").addEventListener("click", sendMessage);
      
      function sendMessage() {
        const input = document.getElementById("novaChatInput");
        const message = input.value.trim();
        if (!message) return;
        
        // Add user message to chat
        addChatMessage(message, "sent");
        
        // Process commands
        if (message.startsWith("/")) {
          processCommand(message);
        } else {
          addBotMessage("I'm an AI assistant. You can give me commands starting with /help to see available commands.");
        }
        
        input.value = "";
      }
      
      function addChatMessage(text, type) {
        const messagesContainer = document.getElementById("novaChatMessages");
        const messageDiv = document.createElement("div");
        messageDiv.className = `nova-message ${type} mb-4`;
        
        const bubbleClass = type === "sent" ? "bg-indigo-600" : "bg-gray-700";
        
        messageDiv.innerHTML = `
          <div class="${bubbleClass} text-white rounded-lg p-3 inline-block max-w-xs">
            ${text}
          </div>
          <p class="text-xs text-gray-400 mt-1">
            ${type === "sent" ? "You" : "Nova"} â€¢ Just now
          </p>
        `;
        
        messagesContainer.appendChild(messageDiv);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
      }
      
      function addBotMessage(text) {
        setTimeout(() => {
          addChatMessage(text, "received");
        }, 500);
      }
      
      function showCommandHelp() {
        const helpDiv = document.getElementById("novaCommandHelp");
        helpDiv.classList.remove("hidden");
        
        // Auto hide after 10 seconds
        setTimeout(() => {
          helpDiv.classList.add("hidden");
        }, 10000);
      }
      
      function processCommand(command) {
        const cmd = command.split(" ")[0].toLowerCase();
        
        switch(cmd) {
          case "/help":
            showCommandHelp();
            break;
            
          case "/create":
            if (!isLoggedIn) {
              document.getElementById("registerModal").classList.remove("hidden");
              document.getElementById("loginModal").classList.add("hidden");
              document.getElementById("adminLoginModal").classList.add("hidden");
              addBotMessage("I've opened the account creation form for you. Please fill in your details.");
            } else {
              addBotMessage("You're already logged in. Logout first to create another account.");
            }
            break;
            
          case "/upload":
            if (isLoggedIn) {
              if (currentUser.role !== "admin") {
                // Show upload section in user dashboard
                showUserDashboard();
                document.getElementById("manualContacts").scrollIntoView({ behavior: "smooth" });
                document.getElementById("manualContacts").focus();
                addBotMessage("I've taken you to the upload section. You can paste phone numbers or upload a file.");
              } else {
                addBotMessage("This command is only for regular users, not admins.");
              }
            } else {
              addBotMessage("Please login first to upload contacts.");
            }
            break;
            
          case "/status":
            if (isLoggedIn) {
              if (currentUser.role !== "admin") {
                // Show call queue in user dashboard
                showUserDashboard();
                document.getElementById("callQueueBody").scrollIntoView({ behavior: "smooth" });
                
                const userCalls = db.calls.filter(c => c.userId === currentUser.id);
                const activeCalls = userCalls.filter(c => c.status === "in-progress").length;
                const completedCalls = userCalls.filter(c => c.status === "completed").length;
                const failedCalls = userCalls.filter(c => c.status === "failed").length;
                
                addBotMessage(`Your current call status: 
- Active calls: ${activeCalls}
- Completed calls: ${completedCalls
